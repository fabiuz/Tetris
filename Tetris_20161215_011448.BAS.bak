'	PROGRAMA:		BLOCKS
' VERSÃO:			1.0
'	AUTOR:			FÁBIO MOURA DE OLIVEIRA
'	DATA: 			14/12/2016
' DESCRIÇÃO:	ESTE PROGRAMA É UM JOGO DE COMPUTADOR SEMELHANTE AO JOGO CLÁSSICO BLOCKS.

#COMPILE EXE
#DIM ALL
#INCLUDE "win32api.inc"

' Nomenclatura do jogo:
' Tabuleiro:	É o local onde os blocos são inseridos.
' Célula:			Interseção entre linha e coluna do tabuleiro.
' Bloco:			Um conjunto de células conectadas a uma outra célula vizinha
'							formando um imagem.
' Peça:				Região, geralmente, em forma quadrática, em que um bloco reside.

%CELULAS_POR_LINHA = 10
%CELULAS_POR_COLUNA = 10
%CELULAS_TOTAIS = %CELULAS_POR_LINHA * %CELULAS_POR_COLUNA

%BLOCO_LARGURA = 10
%BLOCO_ALTURA = 10

%BLOCO_LINHAS = 3
%BLOCO_COLUNAS = 3

' Define o tipo que guardará todos os blocos do jogo.
type stBlocos
	celulas(1 to %BLOCO_LINHAS, 1 TO %BLOCO_COLUNAS) as long
	celulas_cor as long
end type

enum singular statusCelula
	CELULA_VAZIA
	CELULA_PREENCHIDA
end enum

' Guarda informações úteis de cada célula do tabuleiro.
type stCelula
	celulaEstado as statusCelula		
end type


' Cria o tabuleiro onde os blocos serão guardados.
' A célula do tabuleiro, será 0, se não houver bloco naquela posição
' e será 1, se houver bloco 
Dim tabuleiro(1 TO %CELULAS_POR_LINHA, 1 TO %CELULAS_POR_COLUNA) as long



FUNCTION PBMAIN () AS LONG
	


                                                      '
	local janelaBloco as long, bitmapbloco as long
	graphic window new "Blocks v1.0 - Autor Fábio Moura", 0, 0, 500, 500 to janelaBloco
	Graphic bitmap new 500, 500 to bitmapBloco 
	
	local larguraTela, alturaTela as long
	' Obter tamanho:
	graphic get ppi to larguraTela, alturaTela
	
	' Anexa contexto gráfico.
	graphic attach janelaBloco, 0, redraw
	
	local linha as long
	do
	
	
	
		for linha = 0 to 255
			GRAPHIC line (0, linha) - (255, linha), rgb(0, 0, linha)
    next linha
		for linha = 255 to  510 
			GRAPHIC line (0, linha) - (510, linha), rgb(0, linha, 0)		
		next linha
		graphic redraw 
	loop while asc(graphic$(INKEY$)) <> 27
		
     


END FUNCTION


'***********************************************************************************************
'***********************************************************************************************
'***********************************************************************************************


